The graph:
Adjacency list:
0: 1(9) 2(7) 12(4) 
1: 5(4) 
2: 3(10) 4(10) 5(5) 6(9) 7(9) 11(8) 14(10) 
3: 
4: 0(6) 5(5) 12(2) 13(10) 
5: 3(0) 11(6) 12(3) 
6: 0(1) 10(10) 11(9) 12(6) 
7: 5(0) 6(10) 
8: 0(6) 10(1) 11(3) 
9: 0(1) 1(9) 3(3) 12(10) 
10: 7(9) 9(3) 
11: 1(8) 12(7) 13(9) 
12: 
13: 2(1) 3(10) 5(4) 7(8) 10(3) 
14: 3(8) 7(9) 8(8) 


Shortest paths tree, based on stack:
Adjacency list:
0: 1(9) 2(7) 12(4) 
1: 
2: 4(10) 5(5) 6(9) 7(9) 11(8) 14(10) 
3: 
4: 
5: 3(0) 
6: 
7: 
8: 10(1) 
9: 
10: 9(3) 
11: 13(9) 
12: 
13: 
14: 8(8) 

Shortest paths:
0 : 0
9 : 1 <- 0
7 : 2 <- 0
12 : 3 <- 5 <- 2 <- 0
17 : 4 <- 2 <- 0
12 : 5 <- 2 <- 0
16 : 6 <- 2 <- 0
16 : 7 <- 2 <- 0
25 : 8 <- 14 <- 2 <- 0
29 : 9 <- 10 <- 8 <- 14 <- 2 <- 0
26 : 10 <- 8 <- 14 <- 2 <- 0
15 : 11 <- 2 <- 0
4 : 12 <- 0
24 : 13 <- 11 <- 2 <- 0
17 : 14 <- 2 <- 0

Shortest paths tree, based on queue:
Adjacency list:
0: 1(9) 2(7) 12(4) 
1: 
2: 4(10) 5(5) 6(9) 7(9) 11(8) 14(10) 
3: 
4: 
5: 3(0) 
6: 10(10) 
7: 
8: 
9: 
10: 9(3) 
11: 13(9) 
12: 
13: 
14: 8(8) 

Shortest paths:
0 : 0
9 : 1 <- 0
7 : 2 <- 0
12 : 3 <- 5 <- 2 <- 0
17 : 4 <- 2 <- 0
12 : 5 <- 2 <- 0
16 : 6 <- 2 <- 0
16 : 7 <- 2 <- 0
25 : 8 <- 14 <- 2 <- 0
29 : 9 <- 10 <- 6 <- 2 <- 0
26 : 10 <- 6 <- 2 <- 0
15 : 11 <- 2 <- 0
4 : 12 <- 0
24 : 13 <- 11 <- 2 <- 0
17 : 14 <- 2 <- 0

Shortest paths tree, based on priority queue:
Adjacency list:
0: 1(9) 2(7) 12(4) 
1: 
2: 4(10) 5(5) 6(9) 7(9) 11(8) 14(10) 
3: 
4: 
5: 3(0) 
6: 10(10) 
7: 
8: 
9: 
10: 9(3) 
11: 13(9) 
12: 
13: 
14: 8(8) 

Shortest paths:
0 : 0
9 : 1 <- 0
7 : 2 <- 0
12 : 3 <- 5 <- 2 <- 0
17 : 4 <- 2 <- 0
12 : 5 <- 2 <- 0
16 : 6 <- 2 <- 0
16 : 7 <- 2 <- 0
25 : 8 <- 14 <- 2 <- 0
29 : 9 <- 10 <- 6 <- 2 <- 0
26 : 10 <- 6 <- 2 <- 0
15 : 11 <- 2 <- 0
4 : 12 <- 0
24 : 13 <- 11 <- 2 <- 0
17 : 14 <- 2 <- 0
